name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: scintirete/webapp

jobs:
  # Docker 镜像构建和推送
  docker:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=raw,value=latest

    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          VERSION=${{ github.ref_name }}
          BUILD_DATE=${{ github.event.head_commit.timestamp }}
          VCS_REF=${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  # 创建 GitHub Release
  create-release:
    needs: [docker]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Create release notes
        cat > release_notes.md << 'EOF'
        ## Scintirete WebApp ${{ github.ref_name }}
        
        **Scintirete WebApp** - 基于 Next.js 的向量数据库管理界面
        
        ### 🐳 Docker 镜像
        
        Docker 镜像已自动推送到 GitHub Container Registry：
        
        ```bash
        # 拉取指定版本
        docker pull ghcr.io/scintirete/webapp:${{ github.ref_name }}
        
        # 拉取 latest 版本
        docker pull ghcr.io/scintirete/webapp:latest
        ```
        
        ### 🚀 快速开始
        
        #### 使用 Docker Compose (推荐)
        ```bash
        # 下载 docker-compose.yaml
        wget https://raw.githubusercontent.com/${{ github.repository }}/main/docker-compose.yaml
        
        # 启动服务
        docker-compose up -d
        ```
        
        #### 直接运行
        ```bash
        docker run -d \
          --name scintirete-webapp \
          -p 3000:3000 \
          ghcr.io/scintirete/webapp:${{ github.ref_name }}
        ```
        
        ### 📝 环境变量配置
        
        应用支持以下环境变量：
        - `HOSTNAME`: 绑定主机地址（默认: 0.0.0.0）
        - `PORT`: 端口号（默认: 3000）
        - `NODE_ENV`: 运行环境（production/development）
        
        ### 🔗 访问应用
        
        启动后访问 http://localhost:3000 即可使用管理界面。
        
        ### ✨ 主要功能
        
        - 🌍 多语言支持（中文/英文）
        - 📱 响应式设计，支持移动端
        - 🎨 现代化 UI 设计
        - 📊 向量数据库管理功能
        - 🔧 易于部署和配置
        
        ---
        
        **完整更新日志请查看提交记录。**
        EOF
        
        # Check if it's a pre-release (contains dev, alpha, beta, rc)
        if [[ "${{ github.ref_name }}" =~ (dev|alpha|beta|rc) ]]; then
          PRERELEASE_FLAG="--prerelease"
        else
          PRERELEASE_FLAG=""
        fi
        
        # Create release using gh CLI
        gh release create "${{ github.ref_name }}" \
          --title "WebApp ${{ github.ref_name }}" \
          --notes-file release_notes.md \
          $PRERELEASE_FLAG